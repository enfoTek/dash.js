// Generated by CoffeeScript 1.12.4
var CommandService;

module.exports = CommandService = (function() {
  CommandService.prototype.commands = null;

  CommandService.prototype.daisho = null;

  function CommandService(daisho, debug) {
    this.daisho = daisho;
    this.debug = debug;
    this.commands = {};
  }

  CommandService.prototype.register = function(command, hint, fn) {
    if (this.commands[command]) {
      console.log('---CMD SERVICE---\nCollision for ' + name);
    }
    return this.commands[command] = {
      command: command,
      hint: hint,
      fn: fn
    };
  };

  CommandService.prototype.find = function(command) {
    var cmd, found, opts, ref;
    found = [];
    ref = this.commands;
    for (cmd in ref) {
      opts = ref[cmd];
      if (opts.command.indexOf(command) === 0) {
        found.push(opts);
      }
    }
    found.sort(function(a, b) {
      var nameA, nameB;
      nameA = a.command.toLowerCase();
      nameB = b.command.toLowerCase();
      if (nameA < nameB) {
        return -1;
      }
      if (nameA > nameB) {
        return 1;
      }
      return 0;
    });
    return found;
  };

  CommandService.prototype.execute = function(command, args) {
    var arg, i;
    for (i in args) {
      arg = args[i];
      if (arg[0] === '"') {
        args[i] = args[i].substr(1);
      }
      if (arg.substr(-1) === '"') {
        args[i] = args[i].slice(0, -1);
      }
    }
    command = this.commands[command];
    if (!command) {
      console.log('---COMMAND SERVICE---\n' + id + ' not registered');
    }
    return command.fn.apply(this, args);
  };

  return CommandService;

})();

//# sourceMappingURL=command.js.map
