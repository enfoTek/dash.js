// Generated by CoffeeScript 1.12.4
var $, Calendar, DateRangePicker, Text, moment, util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Text = require('./text');

$ = require('jquery');

moment = require('moment-timezone');

Calendar = require('../../vendor/baremetrics-calendar/calendar');

util = require('../../util');

module.exports = DateRangePicker = (function(superClass) {
  extend(DateRangePicker, superClass);

  function DateRangePicker() {
    return DateRangePicker.__super__.constructor.apply(this, arguments);
  }

  DateRangePicker.prototype.tag = 'date-range-picker-control';

  DateRangePicker.prototype.html = require('../../templates/controls/date-range-picker');

  DateRangePicker.prototype.after = '2015-01-01';

  DateRangePicker.prototype.before = moment();

  DateRangePicker.prototype.init = function() {
    DateRangePicker.__super__.init.apply(this, arguments);
    return this.on('updated', (function(_this) {
      return function() {
        var filter, self;
        if (!_this.calendar) {
          filter = _this.data.get('filter');
          self = _this;
          return _this.calendar = new Calendar({
            element: $(_this.root).find('.daterange'),
            earliest_date: moment(_this.after),
            latest_date: moment(_this.before),
            start_date: filter[0],
            end_date: filter[1],
            callback: function() {
              var end, start;
              start = moment(this.start_date).format(util.rfc3339);
              end = moment(this.end_date).format(util.rfc3339);
              console.log('Start Date: ' + start + '\nEnd Date: ' + end);
              self.data.set('filter', [start, end]);
              self.change();
              return self.daisho.update();
            }
          });
        }
      };
    })(this));
  };

  DateRangePicker.prototype.getValue = function(e) {
    return this.data.get('filter');
  };

  return DateRangePicker;

})(Text);

//# sourceMappingURL=date-range-picker.js.map
