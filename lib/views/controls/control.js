// Generated by CoffeeScript 1.12.4
var Control, CrowdControl, Events, m, riot, scrolling,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

CrowdControl = require('crowdcontrol');

m = require('../../mediator');

Events = require('../../events');

riot = require('riot');

scrolling = false;

module.exports = Control = (function(superClass) {
  extend(Control, superClass);

  function Control() {
    return Control.__super__.constructor.apply(this, arguments);
  }

  Control.prototype.init = function() {
    if ((this.input == null) && (this.inputs != null)) {
      this.input = this.inputs[this.lookup];
    }
    if (this.input != null) {
      return Control.__super__.init.apply(this, arguments);
    }
  };

  Control.prototype.getValue = function(event) {
    var ref;
    return (ref = $(event.target).val()) != null ? ref.trim() : void 0;
  };

  Control.prototype.error = function(err) {
    if (err instanceof DOMException) {
      console.log('WARNING: Error in riot dom manipulation ignored.', err);
      return;
    }
    Control.__super__.error.apply(this, arguments);
    if (!scrolling) {
      scrolling = true;
      $('html, body').animate({
        scrollTop: $(this.root).offset().top - $(window).height() / 2
      }, {
        complete: function() {
          return scrolling = false;
        },
        duration: 500
      });
    }
    return m.trigger(Events.ChangeFailed, this.input.name, this.input.ref.get(this.input.name));
  };

  Control.prototype.change = function() {
    Control.__super__.change.apply(this, arguments);
    return m.trigger(Events.Change, this.input.name, this.input.ref.get(this.input.name));
  };

  Control.prototype.changed = function(value) {
    m.trigger(Events.ChangeSuccess, this.input.name, value);
    return riot.update();
  };

  Control.prototype.value = function() {
    return this.input.ref(this.input.name);
  };

  return Control;

})(CrowdControl.Views.Input);

//# sourceMappingURL=control.js.map
