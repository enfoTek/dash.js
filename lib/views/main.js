// Generated by CoffeeScript 1.12.4
var $, CrowdControl, Events, Main, m,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

CrowdControl = require('crowdcontrol');

$ = require('jquery');

m = require('../mediator');

Events = require('../events');

module.exports = Main = (function(superClass) {
  extend(Main, superClass);

  function Main() {
    return Main.__super__.constructor.apply(this, arguments);
  }

  Main.prototype.tag = 'daisho-main';

  Main.prototype.html = require('../templates/main');

  Main.prototype.configs = {
    'activeOrg': [],
    'search': []
  };

  Main.prototype.error = null;

  Main.prototype.orgs = null;

  Main.prototype.init = function() {
    var i, org, ref;
    this.data = this.parentData;
    Main.__super__.init.apply(this, arguments);
    this.orgs = {};
    ref = this.data.get('orgs');
    for (i in ref) {
      org = ref[i];
      this.orgs[i] = org.fullName;
    }
    this.client.setKey(this.data.get('orgs')[this.data.get('activeOrg')]['live-secret-key']);
    this.on('updated', (function(_this) {
      return function() {
        var $el, $page, current;
        current = _this.services.page.current;
        if (current != null) {
          $el = $(current);
          $page = $(_this.root).find('#page');
          $page.children().detach();
          $page.append($el);
          return typeof current.update === "function" ? current.update() : void 0;
        }
      };
    })(this));
    return m.on(Events.Change, (function(_this) {
      return function(name, val) {
        if (name === 'activeOrg') {
          _this.client.setKey(_this.data.get('orgs')[val]['live-secret-key']);
          return window.location.reload();
        }
      };
    })(this));
  };

  Main.prototype.logout = function() {
    m.trigger(Events.Logout, res);
    return window.location.reload();
  };

  Main.prototype._submit = function(event) {};

  return Main;

})(CrowdControl.Views.Form);

//# sourceMappingURL=main.js.map
