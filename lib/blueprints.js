// Generated by CoffeeScript 1.12.4
var blueprints, byId, createBlueprint, fn, i, len, model, models, sp, statusCreated, statusNoContent, statusOk;

sp = function(u) {
  return function(x) {
    var url;
    if (isFunction(u)) {
      url = u(x);
    } else {
      url = u;
    }
    if (this.storeId != null) {
      return ("/store/" + this.storeId) + url;
    } else {
      return url;
    }
  };
};

byId = function(name) {
  switch (name) {
    case 'coupon':
      return sp(function(x) {
        var ref;
        return "/coupon/" + ((ref = x.code) != null ? ref : x);
      });
    case 'product':
      return sp(function(x) {
        var ref, ref1;
        return "/product/" + ((ref = (ref1 = x.id) != null ? ref1 : x.slug) != null ? ref : x);
      });
    case 'user':
      return sp(function(x) {
        var ref, ref1;
        return "/user/" + ((ref = (ref1 = x.id) != null ? ref1 : x.email) != null ? ref : x);
      });
    default:
      return function(x) {
        var ref;
        return "/" + name + "/" + ((ref = x.id) != null ? ref : x);
      };
  }
};

statusOk = function(res) {
  return res.status === 200;
};

statusCreated = function(res) {
  return res.status === 201;
};

statusNoContent = function(res) {
  return res.status === 204;
};

createBlueprint = function(name) {
  var endpoint, url;
  endpoint = "/" + name;
  url = byId(name);
  return {
    list: {
      url: endpoint,
      method: 'GET'
    },
    get: {
      url: url,
      method: 'GET',
      expects: statusOk
    },
    create: {
      url: endpoint,
      method: 'POST',
      expects: statusCreated
    },
    update: {
      url: url,
      method: 'PATCH',
      expects: statusOk
    },
    "delete": {
      url: url,
      method: 'DELETE',
      expects: statusNoContent
    }
  };
};

blueprints = {
  oauth: {
    auth: {
      method: 'POST',
      url: '/auth'
    }
  },
  account: {
    organization: {
      method: 'GET',
      url: '/_/account/organizations'
    }
  },
  dashv2: {
    login: {
      method: 'POST',
      url: '/dashv2/login'
    }
  },
  counter: {
    search: {
      method: 'POST',
      url: '/counter'
    }
  }
};

models = ['user', 'order', 'note'];

fn = function(model) {
  return blueprints[model] = createBlueprint(model);
};
for (i = 0, len = models.length; i < len; i++) {
  model = models[i];
  fn(model);
}

blueprints.note.search = {
  method: 'POST',
  url: '/search/note'
};

module.exports = blueprints;

//# sourceMappingURL=blueprints.js.map
